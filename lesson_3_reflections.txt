When would you want to use a remote repository rather than keeping all your work
local?

    When I want to share my work with others, have others review it or collaborate, 
    or to use it as part of a portfolio. I would also use a remote repository to offer
    my work open source.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    For the same reasons I would want to manually commit changes to any repository. Too many commits would be hard to track, too few and I might lose work.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is GitHub's way of cloning. It remains linked to the original, tallies how many forks have been created, and creates a clone on my own GitHub account.

    Cloning is creating an identical copy of a repo, separate from the original.

    Branching creates a clone, but remains part of the same line (tree), so it can be merged back.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If I am collaborating, it's a good way to track remote changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would collaborate by giving files version names that include author and date. This would be more cumbersome and have a higher chance of errors. GitHub is much easier; there's just a bit of a learning curve.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    If I am changing something significant, trying out a new feature, or experimenting with something, it's helpful to keep a working copy on master and work on a branch. That way, if I want to be able to revert or to share the working copy, master will be intact. 
